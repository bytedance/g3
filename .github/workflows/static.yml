name: StaticLinking
permissions: { }

on:
  push:
    paths-ignore:
      - 'ansible/**'
      - 'doc/**'
      - 'sphinx/**'
      - 'scripts/**'
    branches:
      - 'master'
      - 'lts/**'
  pull_request:
    paths-ignore:
      - 'ansible/**'
      - 'doc/**'
      - 'sphinx/**'
      - 'scripts/**'
    branches:
      - 'master'
      - 'lts/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_RUSTFLAGS: -C target-feature=+crt-static

jobs:
  musl:
    name: musl
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature:
          - vendored-openssl,rustls-ring
          - vendored-tongsuo,rustls-ring
          # - vendored-boringssl
          # - vendored-aws-lc
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install capnproto musl-tools
      - name: Cargo build
        run: cargo build --target=x86_64-unknown-linux-musl --no-default-features --features ${{ matrix.feature }},quic,vendored-c-ares
  msvc:
    name: msvc
    runs-on: windows-latest
    strategy:
      matrix:
        feature:
          - vendored-openssl,rustls-ring
          - vendored-tongsuo,rustls-ring
          - vendored-boringssl,rustls-ring
          - vendored-aws-lc,rustls-aws-lc
    steps:
      - name: Install common tools
        run: choco install capnproto
      - name: Install nasm and ninja for BoringSSL
        if: contains(matrix.feature, 'vendored-boringssl')
        run: choco install nasm ninja
      - name: Install nasm for AWS-LC
        if: contains(matrix.feature, 'vendored-aws-lc')
        run: |
          choco install nasm
          "$env:CSIDL_PROGRAM_FILES\NASM" | Out-File -FilePath "$env:GITHUB_PATH" -Append
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable
          components: clippy
      - name: Cargo build
        run: cargo build --no-default-features --features ${{ matrix.feature }},quic,vendored-c-ares
