apiVersion: apps/v1
kind: Deployment
metadata:
  name: arcus-g3-swg
  labels:
    app: arcus-g3-swg
    component: proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: arcus-g3-swg
  template:
    metadata:
      labels:
        app: arcus-g3-swg
        component: proxy
    spec:
      serviceAccountName: arcus-g3-swg
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: arcus-g3
        image: ghcr.io/arcus-g3/swg/arcus-g3:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http-proxy
          containerPort: 8080
          protocol: TCP
        - name: https-proxy
          containerPort: 8443
          protocol: TCP
        - name: socks-proxy
          containerPort: 1080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: certs
          mountPath: /app/certs
          readOnly: true
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: arcus-g3-config
      - name: certs
        secret:
          secretName: arcus-g3-certs
      - name: logs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - arcus-g3-swg
              topologyKey: kubernetes.io/hostname
